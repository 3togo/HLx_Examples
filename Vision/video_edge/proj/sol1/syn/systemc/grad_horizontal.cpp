// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "grad_horizontal.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic grad_horizontal::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic grad_horizontal::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<2> grad_horizontal::ap_ST_fsm_state1 = "1";
const sc_lv<2> grad_horizontal::ap_ST_fsm_state2 = "10";
const sc_lv<32> grad_horizontal::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> grad_horizontal::ap_const_lv32_1 = "1";
const sc_lv<6> grad_horizontal::ap_const_lv6_30 = "110000";
const sc_lv<7> grad_horizontal::ap_const_lv7_40 = "1000000";
const sc_lv<8> grad_horizontal::ap_const_lv8_A0 = "10100000";
const sc_lv<8> grad_horizontal::ap_const_lv8_E0 = "11100000";
const sc_lv<8> grad_horizontal::ap_const_lv8_40 = "1000000";
const sc_lv<7> grad_horizontal::ap_const_lv7_60 = "1100000";
const sc_lv<8> grad_horizontal::ap_const_lv8_0 = "00000000";
const sc_lv<8> grad_horizontal::ap_const_lv8_20 = "100000";
const sc_lv<7> grad_horizontal::ap_const_lv7_20 = "100000";
const sc_lv<8> grad_horizontal::ap_const_lv8_60 = "1100000";
const sc_lv<6> grad_horizontal::ap_const_lv6_10 = "10000";
const bool grad_horizontal::ap_const_boolean_1 = true;

grad_horizontal::grad_horizontal(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_Filter2D_fu_118 = new Filter2D("grp_Filter2D_fu_118");
    grp_Filter2D_fu_118->ap_clk(ap_clk);
    grp_Filter2D_fu_118->ap_rst(ap_rst);
    grp_Filter2D_fu_118->ap_start(grp_Filter2D_fu_118_ap_start);
    grp_Filter2D_fu_118->ap_done(grp_Filter2D_fu_118_ap_done);
    grp_Filter2D_fu_118->ap_idle(grp_Filter2D_fu_118_ap_idle);
    grp_Filter2D_fu_118->ap_ready(grp_Filter2D_fu_118_ap_ready);
    grp_Filter2D_fu_118->p_src_data_stream_0_V_dout(img_in_data_stream_0_V_dout);
    grp_Filter2D_fu_118->p_src_data_stream_0_V_empty_n(img_in_data_stream_0_V_empty_n);
    grp_Filter2D_fu_118->p_src_data_stream_0_V_read(grp_Filter2D_fu_118_p_src_data_stream_0_V_read);
    grp_Filter2D_fu_118->p_src_data_stream_1_V_dout(img_in_data_stream_1_V_dout);
    grp_Filter2D_fu_118->p_src_data_stream_1_V_empty_n(img_in_data_stream_1_V_empty_n);
    grp_Filter2D_fu_118->p_src_data_stream_1_V_read(grp_Filter2D_fu_118_p_src_data_stream_1_V_read);
    grp_Filter2D_fu_118->p_src_data_stream_2_V_dout(img_in_data_stream_2_V_dout);
    grp_Filter2D_fu_118->p_src_data_stream_2_V_empty_n(img_in_data_stream_2_V_empty_n);
    grp_Filter2D_fu_118->p_src_data_stream_2_V_read(grp_Filter2D_fu_118_p_src_data_stream_2_V_read);
    grp_Filter2D_fu_118->p_dst_data_stream_0_V_din(grp_Filter2D_fu_118_p_dst_data_stream_0_V_din);
    grp_Filter2D_fu_118->p_dst_data_stream_0_V_full_n(img_out_data_stream_0_V_full_n);
    grp_Filter2D_fu_118->p_dst_data_stream_0_V_write(grp_Filter2D_fu_118_p_dst_data_stream_0_V_write);
    grp_Filter2D_fu_118->p_dst_data_stream_1_V_din(grp_Filter2D_fu_118_p_dst_data_stream_1_V_din);
    grp_Filter2D_fu_118->p_dst_data_stream_1_V_full_n(img_out_data_stream_1_V_full_n);
    grp_Filter2D_fu_118->p_dst_data_stream_1_V_write(grp_Filter2D_fu_118_p_dst_data_stream_1_V_write);
    grp_Filter2D_fu_118->p_dst_data_stream_2_V_din(grp_Filter2D_fu_118_p_dst_data_stream_2_V_din);
    grp_Filter2D_fu_118->p_dst_data_stream_2_V_full_n(img_out_data_stream_2_V_full_n);
    grp_Filter2D_fu_118->p_dst_data_stream_2_V_write(grp_Filter2D_fu_118_p_dst_data_stream_2_V_write);
    grp_Filter2D_fu_118->p_kernel_val_0_V_0_read(ap_var_for_const0);
    grp_Filter2D_fu_118->p_kernel_val_0_V_1_read(ap_var_for_const1);
    grp_Filter2D_fu_118->p_kernel_val_0_V_2_read(ap_var_for_const2);
    grp_Filter2D_fu_118->p_kernel_val_0_V_3_read(ap_var_for_const1);
    grp_Filter2D_fu_118->p_kernel_val_1_V_0_read(ap_var_for_const3);
    grp_Filter2D_fu_118->p_kernel_val_1_V_2_read(ap_var_for_const4);
    grp_Filter2D_fu_118->p_kernel_val_1_V_4_read(ap_var_for_const5);
    grp_Filter2D_fu_118->p_kernel_val_2_V_0_read(ap_var_for_const6);
    grp_Filter2D_fu_118->p_kernel_val_2_V_1_read(ap_var_for_const6);
    grp_Filter2D_fu_118->p_kernel_val_2_V_3_read(ap_var_for_const6);
    grp_Filter2D_fu_118->p_kernel_val_2_V_4_read(ap_var_for_const6);
    grp_Filter2D_fu_118->p_kernel_val_3_V_0_read(ap_var_for_const7);
    grp_Filter2D_fu_118->p_kernel_val_3_V_2_read(ap_var_for_const1);
    grp_Filter2D_fu_118->p_kernel_val_3_V_4_read(ap_var_for_const8);
    grp_Filter2D_fu_118->p_kernel_val_4_V_1_read(ap_var_for_const4);
    grp_Filter2D_fu_118->p_kernel_val_4_V_2_read(ap_var_for_const9);
    grp_Filter2D_fu_118->p_kernel_val_4_V_3_read(ap_var_for_const4);
    grp_Filter2D_fu_118->p_kernel_val_4_V_4_read(ap_var_for_const10);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state1_ignore_call6);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( grp_Filter2D_fu_118_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( grp_Filter2D_fu_118_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_grp_Filter2D_fu_118_ap_start);
    sensitive << ( grp_Filter2D_fu_118_ap_start_reg );

    SC_METHOD(thread_img_in_data_stream_0_V_read);
    sensitive << ( grp_Filter2D_fu_118_p_src_data_stream_0_V_read );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_img_in_data_stream_1_V_read);
    sensitive << ( grp_Filter2D_fu_118_p_src_data_stream_1_V_read );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_img_in_data_stream_2_V_read);
    sensitive << ( grp_Filter2D_fu_118_p_src_data_stream_2_V_read );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_img_out_data_stream_0_V_din);
    sensitive << ( grp_Filter2D_fu_118_p_dst_data_stream_0_V_din );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_img_out_data_stream_0_V_write);
    sensitive << ( grp_Filter2D_fu_118_p_dst_data_stream_0_V_write );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_img_out_data_stream_1_V_din);
    sensitive << ( grp_Filter2D_fu_118_p_dst_data_stream_1_V_din );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_img_out_data_stream_1_V_write);
    sensitive << ( grp_Filter2D_fu_118_p_dst_data_stream_1_V_write );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_img_out_data_stream_2_V_din);
    sensitive << ( grp_Filter2D_fu_118_p_dst_data_stream_2_V_din );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_img_out_data_stream_2_V_write);
    sensitive << ( grp_Filter2D_fu_118_p_dst_data_stream_2_V_write );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( grp_Filter2D_fu_118_ap_done );
    sensitive << ( ap_CS_fsm_state2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const4);

    SC_THREAD(thread_ap_var_for_const5);

    SC_THREAD(thread_ap_var_for_const6);

    SC_THREAD(thread_ap_var_for_const7);

    SC_THREAD(thread_ap_var_for_const8);

    SC_THREAD(thread_ap_var_for_const9);

    SC_THREAD(thread_ap_var_for_const10);

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "01";
    grp_Filter2D_fu_118_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "grad_horizontal_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, img_in_data_stream_0_V_dout, "(port)img_in_data_stream_0_V_dout");
    sc_trace(mVcdFile, img_in_data_stream_0_V_empty_n, "(port)img_in_data_stream_0_V_empty_n");
    sc_trace(mVcdFile, img_in_data_stream_0_V_read, "(port)img_in_data_stream_0_V_read");
    sc_trace(mVcdFile, img_in_data_stream_1_V_dout, "(port)img_in_data_stream_1_V_dout");
    sc_trace(mVcdFile, img_in_data_stream_1_V_empty_n, "(port)img_in_data_stream_1_V_empty_n");
    sc_trace(mVcdFile, img_in_data_stream_1_V_read, "(port)img_in_data_stream_1_V_read");
    sc_trace(mVcdFile, img_in_data_stream_2_V_dout, "(port)img_in_data_stream_2_V_dout");
    sc_trace(mVcdFile, img_in_data_stream_2_V_empty_n, "(port)img_in_data_stream_2_V_empty_n");
    sc_trace(mVcdFile, img_in_data_stream_2_V_read, "(port)img_in_data_stream_2_V_read");
    sc_trace(mVcdFile, img_out_data_stream_0_V_din, "(port)img_out_data_stream_0_V_din");
    sc_trace(mVcdFile, img_out_data_stream_0_V_full_n, "(port)img_out_data_stream_0_V_full_n");
    sc_trace(mVcdFile, img_out_data_stream_0_V_write, "(port)img_out_data_stream_0_V_write");
    sc_trace(mVcdFile, img_out_data_stream_1_V_din, "(port)img_out_data_stream_1_V_din");
    sc_trace(mVcdFile, img_out_data_stream_1_V_full_n, "(port)img_out_data_stream_1_V_full_n");
    sc_trace(mVcdFile, img_out_data_stream_1_V_write, "(port)img_out_data_stream_1_V_write");
    sc_trace(mVcdFile, img_out_data_stream_2_V_din, "(port)img_out_data_stream_2_V_din");
    sc_trace(mVcdFile, img_out_data_stream_2_V_full_n, "(port)img_out_data_stream_2_V_full_n");
    sc_trace(mVcdFile, img_out_data_stream_2_V_write, "(port)img_out_data_stream_2_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, grp_Filter2D_fu_118_ap_start, "grp_Filter2D_fu_118_ap_start");
    sc_trace(mVcdFile, grp_Filter2D_fu_118_ap_done, "grp_Filter2D_fu_118_ap_done");
    sc_trace(mVcdFile, grp_Filter2D_fu_118_ap_idle, "grp_Filter2D_fu_118_ap_idle");
    sc_trace(mVcdFile, grp_Filter2D_fu_118_ap_ready, "grp_Filter2D_fu_118_ap_ready");
    sc_trace(mVcdFile, grp_Filter2D_fu_118_p_src_data_stream_0_V_read, "grp_Filter2D_fu_118_p_src_data_stream_0_V_read");
    sc_trace(mVcdFile, grp_Filter2D_fu_118_p_src_data_stream_1_V_read, "grp_Filter2D_fu_118_p_src_data_stream_1_V_read");
    sc_trace(mVcdFile, grp_Filter2D_fu_118_p_src_data_stream_2_V_read, "grp_Filter2D_fu_118_p_src_data_stream_2_V_read");
    sc_trace(mVcdFile, grp_Filter2D_fu_118_p_dst_data_stream_0_V_din, "grp_Filter2D_fu_118_p_dst_data_stream_0_V_din");
    sc_trace(mVcdFile, grp_Filter2D_fu_118_p_dst_data_stream_0_V_write, "grp_Filter2D_fu_118_p_dst_data_stream_0_V_write");
    sc_trace(mVcdFile, grp_Filter2D_fu_118_p_dst_data_stream_1_V_din, "grp_Filter2D_fu_118_p_dst_data_stream_1_V_din");
    sc_trace(mVcdFile, grp_Filter2D_fu_118_p_dst_data_stream_1_V_write, "grp_Filter2D_fu_118_p_dst_data_stream_1_V_write");
    sc_trace(mVcdFile, grp_Filter2D_fu_118_p_dst_data_stream_2_V_din, "grp_Filter2D_fu_118_p_dst_data_stream_2_V_din");
    sc_trace(mVcdFile, grp_Filter2D_fu_118_p_dst_data_stream_2_V_write, "grp_Filter2D_fu_118_p_dst_data_stream_2_V_write");
    sc_trace(mVcdFile, grp_Filter2D_fu_118_ap_start_reg, "grp_Filter2D_fu_118_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state1_ignore_call6, "ap_block_state1_ignore_call6");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
#endif

    }
}

grad_horizontal::~grad_horizontal() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_Filter2D_fu_118;
}

void grad_horizontal::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_lv6_30;
}

void grad_horizontal::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv7_40;
}

void grad_horizontal::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv8_A0;
}

void grad_horizontal::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv8_E0;
}

void grad_horizontal::thread_ap_var_for_const4() {
    ap_var_for_const4 = ap_const_lv8_40;
}

void grad_horizontal::thread_ap_var_for_const5() {
    ap_var_for_const5 = ap_const_lv7_60;
}

void grad_horizontal::thread_ap_var_for_const6() {
    ap_var_for_const6 = ap_const_lv8_0;
}

void grad_horizontal::thread_ap_var_for_const7() {
    ap_var_for_const7 = ap_const_lv8_20;
}

void grad_horizontal::thread_ap_var_for_const8() {
    ap_var_for_const8 = ap_const_lv7_20;
}

void grad_horizontal::thread_ap_var_for_const9() {
    ap_var_for_const9 = ap_const_lv8_60;
}

void grad_horizontal::thread_ap_var_for_const10() {
    ap_var_for_const10 = ap_const_lv6_10;
}

void grad_horizontal::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(grp_Filter2D_fu_118_ap_done.read(), ap_const_logic_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_Filter2D_fu_118_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            grp_Filter2D_fu_118_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_Filter2D_fu_118_ap_ready.read())) {
            grp_Filter2D_fu_118_ap_start_reg = ap_const_logic_0;
        }
    }
}

void grad_horizontal::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void grad_horizontal::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void grad_horizontal::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void grad_horizontal::thread_ap_block_state1_ignore_call6() {
    ap_block_state1_ignore_call6 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void grad_horizontal::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Filter2D_fu_118_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void grad_horizontal::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void grad_horizontal::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(grp_Filter2D_fu_118_ap_done.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void grad_horizontal::thread_grp_Filter2D_fu_118_ap_start() {
    grp_Filter2D_fu_118_ap_start = grp_Filter2D_fu_118_ap_start_reg.read();
}

void grad_horizontal::thread_img_in_data_stream_0_V_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        img_in_data_stream_0_V_read = grp_Filter2D_fu_118_p_src_data_stream_0_V_read.read();
    } else {
        img_in_data_stream_0_V_read = ap_const_logic_0;
    }
}

void grad_horizontal::thread_img_in_data_stream_1_V_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        img_in_data_stream_1_V_read = grp_Filter2D_fu_118_p_src_data_stream_1_V_read.read();
    } else {
        img_in_data_stream_1_V_read = ap_const_logic_0;
    }
}

void grad_horizontal::thread_img_in_data_stream_2_V_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        img_in_data_stream_2_V_read = grp_Filter2D_fu_118_p_src_data_stream_2_V_read.read();
    } else {
        img_in_data_stream_2_V_read = ap_const_logic_0;
    }
}

void grad_horizontal::thread_img_out_data_stream_0_V_din() {
    img_out_data_stream_0_V_din = grp_Filter2D_fu_118_p_dst_data_stream_0_V_din.read();
}

void grad_horizontal::thread_img_out_data_stream_0_V_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        img_out_data_stream_0_V_write = grp_Filter2D_fu_118_p_dst_data_stream_0_V_write.read();
    } else {
        img_out_data_stream_0_V_write = ap_const_logic_0;
    }
}

void grad_horizontal::thread_img_out_data_stream_1_V_din() {
    img_out_data_stream_1_V_din = grp_Filter2D_fu_118_p_dst_data_stream_1_V_din.read();
}

void grad_horizontal::thread_img_out_data_stream_1_V_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        img_out_data_stream_1_V_write = grp_Filter2D_fu_118_p_dst_data_stream_1_V_write.read();
    } else {
        img_out_data_stream_1_V_write = ap_const_logic_0;
    }
}

void grad_horizontal::thread_img_out_data_stream_2_V_din() {
    img_out_data_stream_2_V_din = grp_Filter2D_fu_118_p_dst_data_stream_2_V_din.read();
}

void grad_horizontal::thread_img_out_data_stream_2_V_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        img_out_data_stream_2_V_write = grp_Filter2D_fu_118_p_dst_data_stream_2_V_write.read();
    } else {
        img_out_data_stream_2_V_write = ap_const_logic_0;
    }
}

void grad_horizontal::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_Filter2D_fu_118_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        default : 
            ap_NS_fsm = "XX";
            break;
    }
}

}

